name: Railway Idle Checker

on:
  schedule:
    - cron: '*/5 * * * *' # 每5分钟运行一次

jobs:
  idle-check:
    runs-on: ubuntu-latest
    steps:
      - name: 检查 Railway 空闲状态
        run: |
          echo "=== 🚀 Railway 空闲检测开始 ==="
          echo "⏰ 当前 UTC 时间: $(date -u '+%Y-%m-%d %H:%M:%S')"

          # 调用 Railway API 获取变量
          RAW=$(curl -s -X POST https://backboard.railway.app/graphql/v2 \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.RAILWAY_API_KEY }}" \
            -d '{"query": "query { variables(serviceId: \"${{ secrets.SERVICE_ID }}\") { name value } }"}')

          echo "📦 Railway API 原始返回:"
          echo "$RAW"

          # 检查是否有错误信息
          ERR_MSG=$(echo "$RAW" | jq -r '.errors[0].message // empty')
          if [ -n "$ERR_MSG" ]; then
            echo "❌ Railway API 错误: $ERR_MSG"
            exit 1
          fi

          # 获取 LAST_SEEN 变量
          LAST_SEEN=$(echo "$RAW" | jq -r '.data.variables[]? | select(.name=="LAST_SEEN") | .value')
          if [ -z "$LAST_SEEN" ] || [ "$LAST_SEEN" = "null" ]; then
            echo "⚠️ 没有找到 LAST_SEEN 变量，可能是 SERVICE_ID 或 RAILWAY_API_KEY 错误。"
            exit 0
          fi

          echo "✅ LAST_SEEN 时间: $LAST_SEEN"

          # 计算时间差（秒）
          NOW=$(date -u +%s)
          LAST_SEEN_TS=$(date -d "$LAST_SEEN" +%s)
          DIFF=$((NOW - LAST_SEEN_TS))

          echo "🕒 距离上次活跃时间: $DIFF 秒"

          if [ $DIFF -ge 600 ]; then
            echo "⛔ 已空闲超过 10 分钟，正在停止 Railway 服务..."
            STOP_RESP=$(curl -s -X POST https://backboard.railway.app/graphql/v2 \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer ${{ secrets.RAILWAY_API_KEY }}" \
              -d '{"query": "mutation { serviceStop(id: \"${{ secrets.SERVICE_ID }}\") { id } }"}')
            echo "🛑 停止服务返回: $STOP_RESP"
          else
            echo "✅ 服务仍在运行，无需停止。"
          fi
